from _typeshed import Incomplete

__all__ = ['cached_property', 'cached_readonly', 'wrap_prop', 'monkey', 'LazyObject']

class cached_property:
    fset: Incomplete
    fdel: Incomplete
    fget: Incomplete
    __doc__: Incomplete
    def __init__(self, fget) -> None: ...
    def __get__(self, instance, type: Incomplete | None = None): ...

class cached_readonly(cached_property):
    def __set__(self, instance, value) -> None: ...

def wrap_prop(ctx): ...
def monkey(cls, name: Incomplete | None = None): ...

class LazyObject:
    def __init__(self, init) -> None: ...
    def __getattr__(self, name): ...
    def __setattr__(self, name, value): ...
